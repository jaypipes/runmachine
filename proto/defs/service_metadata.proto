syntax = "proto3";

package runm;

import "error.proto";
import "metadata.proto";
import "object.proto";
import "object_type.proto";
import "partition.proto";
import "search.proto";
import "session.proto";
import "wrappers.proto";

// The runm-metadata gRPC service is a lookup service for UUID to external
// unique names.
//
// In addition to the name and UUID lookups, runm-metadata serves as a
// specialized key/value store for various objects in the runm system. An
// administrator may create metadata schema items which dictate the required
// format or type of a metadata item's values.
service RunmMetadata {
    // Returns information about a specific object type
    rpc object_type_get(ObjectTypeGetRequest) returns (ObjectType) {}

    // Deletes one or more object typees
    rpc object_type_delete(ObjectTypeDeleteRequest) returns (
        ObjectTypeDeleteResponse) {}

    // Set information about a specific object type
    rpc object_type_set(ObjectTypeSetRequest) returns (
        ObjectTypeSetResponse) {}

    // Returns information about multiple object types
    rpc object_type_list(ObjectTypeListRequest) returns (
        stream ObjectType) {}

    // Returns information about a specific metadata schema
    rpc metadata_schema_get(MetadataSchemaGetRequest) returns (
        MetadataSchema) {}

    // Deletes one or more metadata schemas
    rpc metadata_schema_delete(MetadataSchemaDeleteRequest) returns (
        MetadataSchemaDeleteResponse) {}

    // Set information about a specific metadata schema
    rpc metadata_schema_set(MetadataSchemaSetRequest) returns (
        MetadataSchemaSetResponse) {}

    // Returns information about multiple metadata schemas
    rpc metadata_schema_list(MetadataSchemaListRequest) returns (
        stream MetadataSchema) {}

    // Returns information about a specific object
    rpc object_get(ObjectGetRequest) returns (Object) {}

    // Deletes one or more objectes
    rpc object_delete(ObjectDeleteRequest) returns (
        ObjectDeleteResponse) {}

    // Set information about a specific object
    rpc object_set(ObjectSetRequest) returns (
        ObjectSetResponse) {}

    // Returns information about multiple objects
    rpc object_list(ObjectListRequest) returns (
        stream Object) {}

    // Add, remove or modify metadata from an object
    rpc object_metadata_set(ObjectMetadataSetRequest) returns (
        ObjectMetadataSetResponse) {}
}

// RPC Request payload messages
message ObjectTypeGetRequest {
    Session session = 1;
    string search = 2;
}

message ObjectTypeSetFields {
    StringValue code = 1;
    StringValue description = 2;
}

message ObjectTypeSetRequest {
    Session session = 1;
    ObjectType object_type = 2;
    ObjectTypeSetFields changed = 3;
}

message ObjectTypeSetResponse {
    repeated Error errors = 1;
    ObjectType object_type = 2;
}

message ObjectTypeListFilters {
    repeated string identifiers = 1;
}

message ObjectTypeListRequest {
    Session session = 1;
    ObjectTypeListFilters filters = 2;
    SearchOptions options = 3;
}

message ObjectTypeDeleteRequest {
    Session session = 1;
    repeated ObjectType object_types = 2;
}

message ObjectTypeDeleteResponse {
    repeated Error errors = 1;
    uint64 num_deleted = 2;
}

message ObjectGetRequest {
    Session session = 1;
    string search = 2;
}

message ObjectSetFields {
    Partition partition = 1;
    ObjectType object_type = 2;
    StringValue name = 3;
}

message ObjectSetRequest {
    Session session = 1;
    Object object = 2;
    ObjectSetFields changed = 3;
}

message ObjectSetResponse {
    repeated Error errors = 1;
    Object object = 2;
}

message ObjectListFilters {
    repeated Partition partitions = 1;
    repeated ObjectType object_types = 2;
    repeated string uuids = 3;
    repeated string names = 4;
}

message ObjectListRequest {
    Session session = 1;
    ObjectListFilters filters = 2;
    SearchOptions options = 3;
    // When grabbing object information, fetch the object's metadata
    bool fetch_metadata = 50;
}

message ObjectDeleteRequest {
    Session session = 1;
    repeated Object object = 2;
}

message ObjectDeleteResponse {
    repeated Error errors = 1;
    uint64 num_deleted = 2;
}

message MetadataSchemaGetRequest {
    Session session = 1;
    string search = 2;
}

message MetadataSchemaSetFields {
    Partition partition = 1;
    ObjectType object_type = 2;
    StringValue key = 3;
    StringValue schema = 4;
}

message MetadataSchemaSetRequest {
    Session session = 1;
    MetadataSchema metadata_schema = 2;
    MetadataSchemaSetFields changed = 3;
}

message MetadataSchemaSetResponse {
    repeated Error errors = 1;
    MetadataSchema metadata_schema = 2;
}

message MetadataSchemaListFilters {
    repeated Partition partitions = 1;
    repeated ObjectType object_types = 2;
    repeated string keys = 3;
}

message MetadataSchemaListRequest {
    Session session = 1;
    MetadataSchemaListFilters filters = 2;
    SearchOptions options = 3;
}

message MetadataSchemaDeleteRequest {
    Session session = 1;
    repeated MetadataSchema metadata_schema = 2;
}

message MetadataSchemaDeleteResponse {
    repeated Error errors = 1;
    uint64 num_deleted = 2;
}

message ObjectMetadataSetRequest {
    Session session = 1;
    Object object = 2;
    repeated MetadataItem add = 3;
    repeated MetadataItem remove = 4;
    repeated MetadataItem modify = 5;
}

message ObjectMetadataSetResponse {
    repeated Error errors = 1;
    Object object = 2;
    uint64 num_added = 3;
    uint64 num_removed = 4;
    uint64 num_modified = 5;
}
