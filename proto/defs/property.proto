syntax = "proto3";

package runm;

import "object_type.proto";
import "partition.proto";
import "permission.proto";
import "wrappers.proto";

message Property {
    string key = 1;
    string value = 2;
}

// Indicates whether a particular property item may be changed or read by a
// class of user
message PropertyAccessPermission {
    StringValue project = 1;
    StringValue role = 2;
    AccessPermission permission = 3;
}

// Administrators are able to create small JSONSchema documents that allow the
// restriction of data type and format for a particular property key. The only
// restriction is that a property schema may not allow the value of the
// property item value to be an object or list. In other words, the value of
// the property item must be a scalar value.
//
// For example, let's say an administrator wants to allow users to associate an
// "application type" to images that may be used to launch machines. There are
// three possible values for the application type, corresponding to internal IT
// classifications of various company software:
//
// * tool
// * product
// * vendor
//
// The administrator would create a JSONSchema document for describing the
// above constraints that looked like this:
//
// {
//   "type": "string",
//   "enum": ["tool", "product", "vendor"]
// }
//
// The adminstrator would then save a PropertySchema message with an
// object_type of "image", a key of "application_code", and a schema of the
// above serialized JSONSchema document.
//
// Once saved to the property service, the "application_type" property item
// values would be validated against the above schema before being stored.
message PropertySchema {
    // UUID of the partition this property schema has been created in
    string partition = 1;
    // String code of the object type the property schema applies to. e.g.
    // "runm.machine"
    string type = 2;
    // The property key to apply the property schema to. e.g. "architecture"
    string key = 3;
    // a YAML document describing the format and type constraints of the value
    // of the property
    string schema = 4;
    // Collection of access permissions applied to this property schema
    repeated PropertyAccessPermission access_permissions = 50;
}

// Used in matching property schema records
message PropertySchemaFilter {
    PartitionFilter partition = 1;
    ObjectTypeFilter type = 2;
    // A search term on the property schema's property key
    string search = 4;
    // Indicates the search should be a prefix expression
    bool use_prefix = 5;
}
