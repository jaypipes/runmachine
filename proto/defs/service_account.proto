syntax = "proto3";

package runm;

import "permission.proto";
import "project.proto";
import "role.proto";
import "search.proto";
import "session.proto";
import "user.proto";
import "wrappers.proto";

// The runm-account gRPC service handles operations for users,
// projects, authorization, quota limits, etc.
service RunmAccount {
    // Returns information about a specific role
    rpc role_get(RoleGetRequest) returns (Role) {}

    // Deletes a specified role
    rpc role_delete(RoleDeleteRequest) returns (RoleDeleteResponse) {}

    // Set information about a specific role
    rpc role_set(RoleSetRequest) returns (RoleSetResponse) {}

    // Returns information about multiple roles
    rpc role_find(RoleFindRequest) returns (stream Role) {}

    // Returns information about a specific user
    rpc user_get(UserGetRequest) returns (User) {}

    // Deletes a specified user
    rpc user_delete(UserDeleteRequest) returns (UserDeleteResponse) {}

    // Set information about a specific user
    rpc user_set(UserSetRequest) returns (UserSetResponse) {}

    // Returns information about multiple users
    rpc user_find(UserFindRequest) returns (stream User) {}

    // Find projects a user belongs to
    rpc user_members_find(UserMembersFindRequest) returns (stream Project) {}

    // Find roles a user has
    rpc user_roles_find(UserRolesFindRequest) returns (stream Role) {}

    // Add or remove roles from a user
    rpc user_roles_set(UserRolesSetRequest) returns (UserRolesSetResponse) {}

    // Returns information about a specific project
    rpc project_get(ProjectGetRequest) returns (Project) {}

    // Deletes a specified project
    rpc project_delete(ProjectDeleteRequest) returns (ProjectDeleteResponse) {}

    // Set information about a specific project
    rpc project_set(ProjectSetRequest) returns (ProjectSetResponse) {}

    // Returns information about multiple projects
    rpc project_find(ProjectFindRequest) returns (stream Project) {}

    // Add or remove users from an project
    rpc project_members_set(ProjectMembersSetRequest) returns (ProjectMembersSetResponse) {}

    // Find users belonging to an project
    rpc project_members_find(ProjectMembersFindRequest) returns (stream User) {}
}

// RPC Request payload messages
message RoleGetRequest {
    Session session = 1;
    string search = 2;
}

message RoleSetFields {
    StringValue display_name = 1;
    StringValue project = 2;
    repeated Permission add = 3;
    repeated Permission remove = 4;
}

message RoleSetRequest {
    Session session = 1;
    StringValue search = 2;
    RoleSetFields changed = 3;
}

message RoleSetResponse {
    Role role = 1;
}

message RoleFindFilters {
    repeated string identifiers = 1;
    repeated string projects = 2;
}

message RoleFindRequest {
    Session session = 1;
    RoleFindFilters filters = 2;
    SearchOptions options = 3;
}

message RoleDeleteRequest {
    Session session = 1;
    string search = 2;
}

message RoleDeleteResponse {
    uint64 num_deleted = 1;
}

message UserGetRequestOptions {
    bool with_roles = 1;
}

message UserGetRequest {
    Session session = 1;
    string search = 2;
    UserGetRequestOptions options = 100;
}

message UserSetFields {
    StringValue email = 1;
    StringValue display_name = 2;
    repeated string roles = 101;
}

message UserSetRequest {
    Session session = 1;
    StringValue search = 2;
    UserSetFields changed = 3;
}

message UserSetResponse {
    User user = 1;
}

message UserFindFilters {
    repeated string identifiers = 1;
}

message UserFindRequest {
    Session session = 1;
    UserFindFilters filters = 2;
    SearchOptions options = 3;
}

message UserMembersFindRequest {
    Session session = 1;
    string user = 2;
}

message UserRolesFindRequest {
    Session session = 1;
    string user = 2;
}

message UserRolesSetRequest {
    Session session = 1;
    string user = 2;
    repeated string add = 3;
    repeated string remove = 4;
}

message UserRolesSetResponse {
    uint64 num_added = 1;
    uint64 num_removed = 2;
}

message UserDeleteRequest {
    Session session = 1;
    string search = 2;
}

message UserDeleteResponse {
    uint64 num_deleted = 1;
}

message ProjectGetRequest {
    Session session = 1;
    string search = 2;
}

message ProjectSetFields {
    StringValue display_name = 1;
    StringValue parent = 2;
}

message ProjectSetRequest {
    Session session = 1;
    StringValue search = 2;
    ProjectSetFields changed = 3;
}

message ProjectSetResponse {
    Project project = 1;
}

message ProjectFindFilters {
    repeated string identifiers = 1;
}

message ProjectFindRequest {
    Session session = 1;
    ProjectFindFilters filters = 2;
    SearchOptions options = 3;
}

message ProjectMembersSetRequest {
    Session session = 1;
    string project = 2;
    repeated string add = 3;
    repeated string remove = 4;
}

message ProjectMembersSetResponse {
    uint64 num_added = 1;
    uint64 num_removed = 2;
}

message ProjectMembersFindRequest {
    Session session = 1;
    string project = 2;
}

message ProjectDeleteRequest {
    Session session = 1;
    string search = 2;
}

message ProjectDeleteResponse {
    uint64 num_deleted = 1;
}
