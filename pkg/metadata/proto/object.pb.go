// Code generated by protoc-gen-go. DO NOT EDIT.
// source: object.proto

package runm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// An externally-referenceable object in the runm system. All objects in the
// system have a type, a partition identifier, an external name and a UUID
// identifier.
//
// The runm-metadata service keeps track of the mapping of external names to
// UUIDs for all objects it knows about. Therefore, other services in the runm
// deployment -- such as runm-resource -- only need to store the UUID
// identifier for various concrete objects it manages.
//
// For example, the runm-resource service manages *providers*. The
// runm-resource database stores provider records, with each record having a
// uuid field indicating the external record identifier for the provider.
// However, adminstrators and users probably don't want to refer to a
// particular compute host with a UUID. Instead, the user prefers to refer to
// the compute host using a common hostname. The runm-metadata service is
// responsible for mapping those external names and object types (in this case,
// the object type would be "runm.provider") to the external UUID identifier.
type Object struct {
	// The UUID of the partition this object is in
	Partition string `protobuf:"bytes,1,opt,name=partition" json:"partition,omitempty"`
	// The object type code this object is
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	// The external identifier of the project this object is owned by. Can be
	// empty if the type of object isn't ownable by a project (for instance, a
	// `runm.provider` isn't ownable by a project, but a `runm.machine` is)
	Project string `protobuf:"bytes,3,opt,name=project" json:"project,omitempty"`
	// The object's globally-unique identifier
	Uuid string `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
	// The object's human-readable name, unique within the scope of the object
	// type and partition, and optionally the project.
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// The collection of key/value properties associated with the object
	Properties []*Property `protobuf:"bytes,50,rep,name=properties" json:"properties,omitempty"`
	// The collection of simple string tags associated with the object
	Tags                 []string `protobuf:"bytes,51,rep,name=tags" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Object) Reset()         { *m = Object{} }
func (m *Object) String() string { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()    {}
func (*Object) Descriptor() ([]byte, []int) {
	return fileDescriptor_object_014ecb5826d8b284, []int{0}
}
func (m *Object) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Object.Unmarshal(m, b)
}
func (m *Object) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Object.Marshal(b, m, deterministic)
}
func (dst *Object) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Object.Merge(dst, src)
}
func (m *Object) XXX_Size() int {
	return xxx_messageInfo_Object.Size(m)
}
func (m *Object) XXX_DiscardUnknown() {
	xxx_messageInfo_Object.DiscardUnknown(m)
}

var xxx_messageInfo_Object proto.InternalMessageInfo

func (m *Object) GetPartition() string {
	if m != nil {
		return m.Partition
	}
	return ""
}

func (m *Object) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *Object) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Object) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Object) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Object) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Object) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// Used in matching object records
type ObjectFilter struct {
	Partition  *PartitionFilter  `protobuf:"bytes,1,opt,name=partition" json:"partition,omitempty"`
	ObjectType *ObjectTypeFilter `protobuf:"bytes,2,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	// The project the object must belong to, if the object type scope of this
	// object is PROJECT
	Project string `protobuf:"bytes,3,opt,name=project" json:"project,omitempty"`
	Uuid    string `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
	// A search term on the object's name
	Name string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// Indicates the search on name should be a prefix expression
	UsePrefix            bool     `protobuf:"varint,6,opt,name=use_prefix,json=usePrefix" json:"use_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectFilter) Reset()         { *m = ObjectFilter{} }
func (m *ObjectFilter) String() string { return proto.CompactTextString(m) }
func (*ObjectFilter) ProtoMessage()    {}
func (*ObjectFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_object_014ecb5826d8b284, []int{1}
}
func (m *ObjectFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectFilter.Unmarshal(m, b)
}
func (m *ObjectFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectFilter.Marshal(b, m, deterministic)
}
func (dst *ObjectFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectFilter.Merge(dst, src)
}
func (m *ObjectFilter) XXX_Size() int {
	return xxx_messageInfo_ObjectFilter.Size(m)
}
func (m *ObjectFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectFilter proto.InternalMessageInfo

func (m *ObjectFilter) GetPartition() *PartitionFilter {
	if m != nil {
		return m.Partition
	}
	return nil
}

func (m *ObjectFilter) GetObjectType() *ObjectTypeFilter {
	if m != nil {
		return m.ObjectType
	}
	return nil
}

func (m *ObjectFilter) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ObjectFilter) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ObjectFilter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ObjectFilter) GetUsePrefix() bool {
	if m != nil {
		return m.UsePrefix
	}
	return false
}

func init() {
	proto.RegisterType((*Object)(nil), "runm.Object")
	proto.RegisterType((*ObjectFilter)(nil), "runm.ObjectFilter")
}

func init() { proto.RegisterFile("object.proto", fileDescriptor_object_014ecb5826d8b284) }

var fileDescriptor_object_014ecb5826d8b284 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x59, 0x1b, 0xa3, 0x99, 0x94, 0x8a, 0x0b, 0xca, 0x50, 0x14, 0x43, 0x4f, 0x39, 0xe5,
	0x90, 0x1c, 0x7c, 0x03, 0xaf, 0x2d, 0xc1, 0x7b, 0x49, 0x75, 0x94, 0x15, 0x9b, 0x5d, 0x36, 0xbb,
	0x60, 0x1e, 0xd2, 0x47, 0xf0, 0x5d, 0x64, 0xff, 0xb4, 0x06, 0xbd, 0x7a, 0x9b, 0xf9, 0xcd, 0x7c,
	0x1f, 0xf3, 0xed, 0xc2, 0x5c, 0xee, 0xde, 0xe8, 0xc9, 0x54, 0x4a, 0x4b, 0x23, 0x79, 0xa2, 0x6d,
	0xbf, 0x5f, 0x5e, 0x06, 0xb6, 0x35, 0xa3, 0xa2, 0x30, 0x58, 0x5e, 0xa8, 0x4e, 0x1b, 0x61, 0x84,
	0xec, 0x23, 0x58, 0x28, 0x2d, 0x15, 0x69, 0x33, 0x86, 0x7e, 0xf5, 0xc9, 0x20, 0x5d, 0x7b, 0x19,
	0xbf, 0x81, 0xec, 0xb8, 0x8d, 0xac, 0x60, 0x65, 0xd6, 0xfe, 0x00, 0x7e, 0x07, 0xf9, 0xc4, 0x1e,
	0x4f, 0xfc, 0x1c, 0x02, 0x7a, 0x1c, 0x15, 0x71, 0x84, 0x33, 0xa5, 0xa5, 0x6b, 0x71, 0xe6, 0x87,
	0x87, 0x96, 0x73, 0x48, 0xac, 0x15, 0xcf, 0x98, 0x78, 0xec, 0x6b, 0xc7, 0xfa, 0x6e, 0x4f, 0x78,
	0x1a, 0x98, 0xab, 0x79, 0x05, 0x10, 0xaf, 0x13, 0x34, 0x60, 0x5d, 0xcc, 0xca, 0xbc, 0x5e, 0x54,
	0x2e, 0x5a, 0xb5, 0x89, 0x57, 0xb7, 0x93, 0x0d, 0xe7, 0x61, 0xba, 0xd7, 0x01, 0x9b, 0x62, 0xe6,
	0x3c, 0x5c, 0xbd, 0xfa, 0x62, 0x30, 0x0f, 0x79, 0x1e, 0xc4, 0xbb, 0x21, 0xcd, 0x9b, 0xdf, 0xa9,
	0xf2, 0xfa, 0x2a, 0x7a, 0x1e, 0x70, 0xd8, 0x9c, 0x86, 0xbd, 0xff, 0x1b, 0x36, 0xaf, 0xaf, 0x83,
	0x6c, 0x7d, 0x8c, 0x1c, 0x75, 0xff, 0xfb, 0x08, 0xb7, 0x00, 0x76, 0xa0, 0xad, 0xd2, 0xf4, 0x22,
	0x3e, 0x30, 0x2d, 0x58, 0x79, 0xde, 0x66, 0x76, 0xa0, 0x8d, 0x07, 0xbb, 0xd4, 0x7f, 0x5b, 0xf3,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x3d, 0xcd, 0x9a, 0x00, 0x02, 0x00, 0x00,
}
