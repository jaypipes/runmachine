syntax = "proto3";

package runmmeta;

import "error.proto";
import "property.proto";
import "object.proto";
import "object_definition.proto";
import "object_type.proto";
import "partition.proto";
import "provider_type.proto";
import "search.proto";
import "session.proto";

// The runm-metadata gRPC service is a lookup service for UUID to external
// unique names.
//
// In addition to the name and UUID lookups, runm-metadata serves as a
// specialized key/value store for various objects in the runm system. An
// administrator may create object definitions which dictate the required
// format or type of an object's property's values.
service RunmMetadata {
    // Looks up partition by UUID
    rpc partition_get_by_uuid(PartitionGetByUuidRequest) returns (Partition) {}

    // Look up partition by name
    rpc partition_get_by_name(PartitionGetByNameRequest) returns (Partition) {}

    // Returns information about multiple partitions
    rpc partition_list(PartitionListRequest) returns (
        stream Partition) {}

    // Create a new partition
    rpc partition_create(PartitionCreateRequest) returns (
        PartitionCreateResponse) {}

    // Look up object type by code
    rpc object_type_get_by_code(ObjectTypeGetByCodeRequest) returns (
        ObjectType) {}

    // Returns information about multiple object types
    rpc object_type_list(ObjectTypeListRequest) returns (
        stream ObjectType) {}

    // Look up object by UUID
    rpc object_get_by_uuid(ObjectGetByUuidRequest) returns (Object) {}

    // Look up object by partition, object type, name and optional project
    rpc object_get_by_name(ObjectGetByNameRequest) returns (Object) {}

    // Deletes one or more objectes
    rpc object_delete(ObjectDeleteRequest) returns (
        DeleteResponse) {}

    // Create a new object
    rpc object_create(ObjectCreateRequest) returns (
        ObjectCreateResponse) {}

    // Returns information about multiple objects
    rpc object_list(ObjectListRequest) returns (
        stream Object) {}

    // Add, remove or modify properties from an object
    rpc object_properties_set(ObjectPropertiesSetRequest) returns (
        ObjectPropertiesSetResponse) {}

    // Returns property items for an object
    rpc object_properties_list(ObjectPropertiesListRequest) returns (
        stream Property) {}

    // Look up provider type by code
    rpc provider_type_get_by_code(ProviderTypeGetByCodeRequest) returns (
        ProviderType) {}

    // Returns information about multiple provider types
    rpc provider_type_list(ProviderTypeListRequest) returns (
        stream ProviderType) {}

    // Returns information about a single provider definition
    rpc provider_definition_get(ProviderDefinitionGetRequest) returns (
        ObjectDefinition) {}

    // Set information about a specific provider definition
    rpc provider_definition_set(ProviderDefinitionSetRequest) returns (
        ObjectDefinitionSetResponse) {}
}

message DeleteResponse {
    uint64 num_deleted = 2;
}

message PartitionGetByUuidRequest {
    Session session = 1;
    string uuid = 2;
}

message PartitionGetByNameRequest {
    Session session = 1;
    string name = 2;
}

message PartitionListRequest {
    Session session = 1;
    SearchOptions options = 2;
    repeated PartitionFilter any = 3;
}

message PartitionCreateRequest {
    Session session = 1;
    Partition partition = 2;
}

message PartitionCreateResponse {
    // The newly-created partition
    Partition partition = 1;
}

message ObjectTypeGetByCodeRequest {
    Session session = 1;
    string code = 2;
}

message ObjectTypeListRequest {
    Session session = 1;
    SearchOptions options = 2;
    // A set of filter expressions that are OR'd together when determining
    // matches
    repeated ObjectTypeFilter any = 3;
}

message ObjectGetByUuidRequest {
    Session session = 1;
    string uuid = 2;
}

message ObjectGetByNameRequest {
    Session session = 1;
    string partition_uuid = 2;
    string object_type_code = 3;
    // The project the object must belong to, if the object type scope of this
    // object is PROJECT
    string project = 4;
    string name = 5;
}

message ObjectCreateRequest {
    Session session = 1;
    Object object = 2;
}

message ObjectCreateResponse {
    // The newly-created object
    Object object = 1;
}

message ObjectListRequest {
    Session session = 1;
    SearchOptions options = 2;
    // A set of filter expressions that are OR'd together when determining
    // matches
    repeated ObjectFilter any = 3;
}

message ObjectDeleteRequest {
    Session session = 1;
    repeated string uuids = 2;
}

message ObjectPropertiesSetRequest {
    Session session = 1;
    Object object = 2;
    repeated Property add = 3;
    repeated Property remove = 4;
    repeated Property modify = 5;
}

message ObjectPropertiesSetResponse {
    repeated Error errors = 1;
    Object object = 2;
    uint64 num_added = 3;
    uint64 num_removed = 4;
    uint64 num_modified = 5;
}

message ObjectPropertiesListFilters {
    // Used when searching for items with one or more keys, regardless of value
    repeated string keys = 1;
    // Used when searching for items with one or more values, regardless of key
    repeated string values = 2;
    // Used when searching for specific key/value pairs
    repeated Property properties = 3;
}

message ObjectPropertiesListRequest {
    Session session = 1;
    Object object = 2;
    ObjectPropertiesListFilters filters = 3;
    SearchOptions options = 4;
}

message ProviderTypeGetByCodeRequest {
    Session session = 1;
    string code = 2;
}

message ProviderTypeListRequest {
    Session session = 1;
    SearchOptions options = 2;
    // A set of filter expressions that are OR'd together when determining
    // matches
    repeated ProviderTypeFilter any = 3;
}

message ProviderDefinitionGetRequest {
    Session session = 1;
    // The UUID of the partition the object definition applies to, or empty
    // string to return the global default object definition for providers
    string partition = 2;
    // The type of provider the object definition applies to, or empty string
    // to return the object definition for the global or partition default for
    // providers
    string provider_type = 3;
}

message ProviderDefinitionSetRequest {
    Session session = 1;
    // The UUID of the partition the object definition applies to, or empty
    // string to apply the object definition as the global default for
    // providers
    string partition = 2;
    // The type of provider the object definition applies to, or empty string
    // to apply the object definition as the global or partition default for
    // providers
    string provider_type = 3;
    // The newly-set object definition
    ObjectDefinition object_definition = 50;
}

message ObjectDefinitionSetResponse {
    ObjectDefinition object_definition = 1;
}
