// Code generated by protoc-gen-go. DO NOT EDIT.
// source: partition.proto

package runm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A partition is a division of the entire global view that runmachine has.
// Providers are in one and only one partition. Administrators may list
// inventory and usage across multiple partitions whereas normal project users
// generally will have results filtered to a specific partition that they are
// working with or have access to.
type Partition struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Partition) Reset()         { *m = Partition{} }
func (m *Partition) String() string { return proto.CompactTextString(m) }
func (*Partition) ProtoMessage()    {}
func (*Partition) Descriptor() ([]byte, []int) {
	return fileDescriptor_partition_dc5905f8248b89f2, []int{0}
}
func (m *Partition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partition.Unmarshal(m, b)
}
func (m *Partition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partition.Marshal(b, m, deterministic)
}
func (dst *Partition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partition.Merge(dst, src)
}
func (m *Partition) XXX_Size() int {
	return xxx_messageInfo_Partition.Size(m)
}
func (m *Partition) XXX_DiscardUnknown() {
	xxx_messageInfo_Partition.DiscardUnknown(m)
}

var xxx_messageInfo_Partition proto.InternalMessageInfo

func (m *Partition) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Partition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Used in matching partition records
type PartitionFilter struct {
	// UUID or human-readable name of the partition
	Search string `protobuf:"bytes,1,opt,name=search" json:"search,omitempty"`
	// Indicates the search should be a prefix expression
	UsePrefix            bool     `protobuf:"varint,2,opt,name=use_prefix,json=usePrefix" json:"use_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartitionFilter) Reset()         { *m = PartitionFilter{} }
func (m *PartitionFilter) String() string { return proto.CompactTextString(m) }
func (*PartitionFilter) ProtoMessage()    {}
func (*PartitionFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_partition_dc5905f8248b89f2, []int{1}
}
func (m *PartitionFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionFilter.Unmarshal(m, b)
}
func (m *PartitionFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionFilter.Marshal(b, m, deterministic)
}
func (dst *PartitionFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionFilter.Merge(dst, src)
}
func (m *PartitionFilter) XXX_Size() int {
	return xxx_messageInfo_PartitionFilter.Size(m)
}
func (m *PartitionFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionFilter.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionFilter proto.InternalMessageInfo

func (m *PartitionFilter) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *PartitionFilter) GetUsePrefix() bool {
	if m != nil {
		return m.UsePrefix
	}
	return false
}

func init() {
	proto.RegisterType((*Partition)(nil), "runm.Partition")
	proto.RegisterType((*PartitionFilter)(nil), "runm.PartitionFilter")
}

func init() { proto.RegisterFile("partition.proto", fileDescriptor_partition_dc5905f8248b89f2) }

var fileDescriptor_partition_dc5905f8248b89f2 = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x48, 0x2c, 0x2a,
	0xc9, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0x2a, 0xcd,
	0xcb, 0x55, 0x32, 0xe6, 0xe2, 0x0c, 0x80, 0x49, 0x08, 0x09, 0x71, 0xb1, 0x94, 0x96, 0x66, 0xa6,
	0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x20, 0xb1, 0xbc, 0xc4, 0xdc, 0x54, 0x09,
	0x26, 0x88, 0x18, 0x88, 0xad, 0xe4, 0xc1, 0xc5, 0x0f, 0xd7, 0xe4, 0x96, 0x99, 0x53, 0x92, 0x5a,
	0x24, 0x24, 0xc6, 0xc5, 0x56, 0x9c, 0x9a, 0x58, 0x94, 0x9c, 0x01, 0xd5, 0x0c, 0xe5, 0x09, 0xc9,
	0x72, 0x71, 0x95, 0x16, 0xa7, 0xc6, 0x17, 0x14, 0xa5, 0xa6, 0x65, 0x56, 0x80, 0x0d, 0xe1, 0x08,
	0xe2, 0x2c, 0x2d, 0x4e, 0x0d, 0x00, 0x0b, 0x24, 0xb1, 0x81, 0xdd, 0x62, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x0a, 0x31, 0xa2, 0x32, 0x9e, 0x00, 0x00, 0x00,
}
